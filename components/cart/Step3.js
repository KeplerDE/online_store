import { useState } from "react";
import { useCart } from "@/context/cart"; 
import toast from "react-hot-toast";
import OrderSummary from "./OrderSummary";

export default function Step3({ onPrevStep }) {
  const { cartItems, validCoupon, couponCode } = useCart();
  const [loading, setLoading] = useState(false);

  const handleClick = async () => {
    setLoading(true);
    console.log("–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞...");

    try {
      // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
      const payload = {
        cartItems: cartItems.map((item) => ({
          _id: item._id,
          quantity: item.quantity,
        })),
      };

      // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∫—É–ø–æ–Ω–∞, –µ—Å–ª–∏ –æ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω
      if(validCoupon) {
        payload.couponCode = couponCode;
        console.log(`–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ –∫—É–ø–æ–Ω–∞: ${couponCode}`);
      } else {
        console.log("–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–¥ –∫—É–ø–æ–Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.");
      }

      console.log("–î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏ Stripe:", payload);

      // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      const response = await fetch(`${process.env.API}/user/stripe/session`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(payload),
      });

      console.log("–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ –æ—Ç API:", response.status);

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
      if (!response.ok) {
        const errorData = await response.json();
        console.error("–î–∞–Ω–Ω—ã–µ –æ–± –æ—à–∏–±–∫–µ:", errorData);
        toast.error(errorData.err);
      } else {
        const data = await response.json();
        console.log("–°–µ—Å—Å–∏—è Stripe —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...", data.url);
        window.location.href = data.url; // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã Stripe
      }
    } catch (err) {
      console.error("–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞:", err);
      toast.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
    } finally {
      setLoading(false);
      console.log("–ü—Ä–æ—Ü–µ—Å—Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∑–∞–≤–µ—Ä—à—ë–Ω.");
    }
  };


  return (
    <div className="container">
      <div className="row">
        <div className="col-lg-8">
          <p className="alert alert-primary">Payment Method</p>
          <h2 className="text-center">üîí üí≥</h2>
          <p className="alert alert-danger">
            Flat rate $5 shipping fee will apply for all orders Europe wide!
          </p>
          <p className="lead card p-5 bg-secondary text-light">
            Clicking 'Place Order' will securely redirect you to our trusted payment partner, Stripe, to complete your checkout. Your payment information is fully protected and encrypted for your security.
          </p>
          <div className="d-flex justify-content-end my-4">
            <button className="btn btn-outline-danger btn-raised col-6" onClick={onPrevStep}>
              Previous
            </button>
            <button className="btn btn-success btn-raised col-6" onClick={handleClick} disabled={loading}>
              {loading ? "Processing ..." : "Place Order"}
            </button>
          </div>
        </div>
        <div className="col-lg-4">
          < OrderSummary/>
        </div>
      </div>
    </div>
  );
}
